// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render AnsibleCredential component render AnsibleCredential component1 1`] = `
<React.Fragment>
  <React.Fragment>
    <div
      className="titleWithTooltip"
    >
      <Title
        headingLevel="h3"
      >
        Credential
      </Title>
      <div
        className="GrayOutlinedQuestionCircleIcon"
      >
        <mockTooltip
          content={
            <div>
              Credential
            </div>
          }
          position="top"
        >
          <OutlinedQuestionCircleIcon
            color="#6a6e73"
            noVerticalAlign={false}
            size="sm"
          />
        </mockTooltip>
      </div>
    </div>
    <div
      className="infoArea createCredential"
    >
      <Select
        aria-describedby=""
        aria-invalid={false}
        aria-label="Select Ansible credential"
        aria-labelledby=""
        chipGroupComponent={null}
        className=""
        clearSelectionsAriaLabel="Clear all"
        createText="Create"
        customBadgeText={null}
        customContent={null}
        direction="down"
        favorites={Array []}
        favoritesLabel="Favorites"
        hasInlineFilter={false}
        inlineFilterPlaceholderText={null}
        inputIdPrefix=""
        isCreatable={false}
        isDisabled={false}
        isGrouped={false}
        isInputValuePersisted={false}
        isOpen={false}
        isPlain={false}
        menuAppendTo="inline"
        noResultsFoundText="No results found"
        onClear={[Function]}
        onCreateOption={[Function]}
        onFilter={null}
        onSelect={[Function]}
        onToggle={[MockFunction]}
        onTypeaheadInputChanged={null}
        ouiaSafe={true}
        placeholderText="Select Ansible credential"
        removeSelectionAriaLabel="Remove"
        selections="grc-testing"
        toggleAriaLabel="Options menu"
        toggleIcon={null}
        toggleId={null}
        typeAheadAriaLabel=""
        validated="default"
        variant="single"
        width=""
      >
        <SelectOption
          className=""
          component="button"
          description="https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-jbwbd.dev08.red-chesterfield.com"
          index={0}
          inputId=""
          isChecked={false}
          isDisabled={false}
          isFavorite={null}
          isLoad={false}
          isLoading={false}
          isNoResultsOption={false}
          isPlaceholder="grc-testing-new"
          isSelected={false}
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="grc-testing-new"
        />
      </Select>
      <AcmLaunchLink
        links={
          Array [
            Object {
              "href": "/multicloud/credentials",
              "icon": <AcmIcon
                icon="opennewtab"
              />,
              "id": "createCredentialLink",
              "noIcon": false,
              "text": <TruncateText
                maxCharacters={60}
                text="Add credentials"
              />,
            },
          ]
        }
      />
    </div>
  </React.Fragment>
</React.Fragment>
`;

exports[`render AnsibleCredential component render AnsibleCredential component2 1`] = `
<React.Fragment>
  <React.Fragment>
    <div
      className="titleWithTooltip"
    >
      <Title
        headingLevel="h3"
      >
        Credential
      </Title>
      <div
        className="GrayOutlinedQuestionCircleIcon"
      >
        <mockTooltip
          content={
            <div>
              Credential
            </div>
          }
          position="top"
        >
          <OutlinedQuestionCircleIcon
            color="#6a6e73"
            noVerticalAlign={false}
            size="sm"
          />
        </mockTooltip>
      </div>
    </div>
    <div
      className="infoArea createCredential"
    >
      <Select
        aria-describedby=""
        aria-invalid={false}
        aria-label="Select Ansible credential"
        aria-labelledby=""
        chipGroupComponent={null}
        className=""
        clearSelectionsAriaLabel="Clear all"
        createText="Create"
        customBadgeText={null}
        customContent={null}
        direction="down"
        favorites={Array []}
        favoritesLabel="Favorites"
        hasInlineFilter={false}
        inlineFilterPlaceholderText={null}
        inputIdPrefix=""
        isCreatable={false}
        isDisabled={false}
        isGrouped={false}
        isInputValuePersisted={false}
        isOpen={true}
        isPlain={false}
        menuAppendTo="inline"
        noResultsFoundText="No results found"
        onClear={[Function]}
        onCreateOption={[Function]}
        onFilter={null}
        onSelect={[Function]}
        onToggle={[MockFunction]}
        onTypeaheadInputChanged={null}
        ouiaSafe={true}
        placeholderText="Select Ansible credential"
        removeSelectionAriaLabel="Remove"
        selections="grc-testing"
        toggleAriaLabel="Options menu"
        toggleIcon={null}
        toggleId={null}
        typeAheadAriaLabel=""
        validated="default"
        variant="single"
        width=""
      >
        <SelectOption
          className=""
          component="button"
          description="https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-jbwbd.dev08.red-chesterfield.com"
          index={0}
          inputId=""
          isChecked={false}
          isDisabled={false}
          isFavorite={null}
          isLoad={false}
          isLoading={false}
          isNoResultsOption={false}
          isPlaceholder="grc-testing-new"
          isSelected={false}
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="grc-testing-new"
        />
      </Select>
      <AcmLaunchLink
        links={
          Array [
            Object {
              "href": "/multicloud/credentials",
              "icon": <AcmIcon
                icon="opennewtab"
              />,
              "id": "createCredentialLink",
              "noIcon": false,
              "text": <TruncateText
                maxCharacters={60}
                text="Add credentials"
              />,
            },
          ]
        }
      />
    </div>
  </React.Fragment>
</React.Fragment>
`;

exports[`render AnsibleCredential component render AnsibleCredential component3 1`] = `
<React.Fragment>
  <React.Fragment>
    <div
      className="titleWithTooltip"
    >
      <Title
        headingLevel="h3"
      >
        Credential
      </Title>
      <div
        className="GrayOutlinedQuestionCircleIcon"
      >
        <mockTooltip
          content={
            <div>
              Credential
            </div>
          }
          position="top"
        >
          <OutlinedQuestionCircleIcon
            color="#6a6e73"
            noVerticalAlign={false}
            size="sm"
          />
        </mockTooltip>
      </div>
    </div>
    <div
      className="infoArea createCredential"
    >
      <Select
        aria-describedby=""
        aria-invalid={false}
        aria-label="Select Ansible credential"
        aria-labelledby=""
        chipGroupComponent={null}
        className=""
        clearSelectionsAriaLabel="Clear all"
        createText="Create"
        customBadgeText={null}
        customContent={null}
        direction="down"
        favorites={Array []}
        favoritesLabel="Favorites"
        hasInlineFilter={false}
        inlineFilterPlaceholderText={null}
        inputIdPrefix=""
        isCreatable={false}
        isDisabled={false}
        isGrouped={false}
        isInputValuePersisted={false}
        isOpen={true}
        isPlain={false}
        menuAppendTo="inline"
        noResultsFoundText="No results found"
        onClear={[Function]}
        onCreateOption={[Function]}
        onFilter={null}
        onSelect={[Function]}
        onToggle={[MockFunction]}
        onTypeaheadInputChanged={null}
        ouiaSafe={true}
        placeholderText="Select Ansible credential"
        removeSelectionAriaLabel="Remove"
        selections=""
        toggleAriaLabel="Options menu"
        toggleIcon={null}
        toggleId={null}
        typeAheadAriaLabel=""
        validated="default"
        variant="single"
        width=""
      >
        <SelectOption
          className=""
          component="button"
          description="https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-jbwbd.dev08.red-chesterfield.com"
          index={0}
          inputId=""
          isChecked={false}
          isDisabled={false}
          isFavorite={null}
          isLoad={false}
          isLoading={false}
          isNoResultsOption={false}
          isPlaceholder="grc-testing-new"
          isSelected={false}
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="grc-testing-new"
        />
      </Select>
      <AcmLaunchLink
        links={
          Array [
            Object {
              "href": "/multicloud/credentials",
              "icon": <AcmIcon
                icon="opennewtab"
              />,
              "id": "createCredentialLink",
              "noIcon": false,
              "text": <TruncateText
                maxCharacters={60}
                text="Add credentials"
              />,
            },
          ]
        }
      />
    </div>
    
  </React.Fragment>
</React.Fragment>
`;

exports[`render AnsibleCredential component render empty AnsibleCredential component4 1`] = `
<React.Fragment>
  <div
    className="infoArea createCredential noExistingCredential"
  >
    <Text>
      Ansible credential is required to create an Ansible job. Create your credential by clicking the following link:
      <AcmLaunchLink
        links={
          Array [
            Object {
              "href": "/multicloud/credentials",
              "icon": <AcmIcon
                icon="opennewtab"
              />,
              "id": "createCredentialLink",
              "noIcon": false,
              "text": <TruncateText
                maxCharacters={60}
                text="Add credentials"
              />,
            },
          ]
        }
      />
    </Text>
  </div>
</React.Fragment>
`;

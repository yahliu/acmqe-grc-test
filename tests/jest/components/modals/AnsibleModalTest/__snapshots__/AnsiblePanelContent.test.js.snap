// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render AnsiblePanel component render AnsiblePanel component1 1`] = `
<React.Fragment>
  <Tabs
    activeKey={0}
    className="ansible-switch"
    component="div"
    isBox={false}
    isFilled={true}
    isSecondary={false}
    isVertical={false}
    leftScrollAriaLabel="Scroll left"
    mountOnEnter={false}
    onSelect={[MockFunction]}
    ouiaSafe={true}
    rightScrollAriaLabel="Scroll right"
    unmountOnExit={false}
    variant="default"
  >
    <Tab
      eventKey={0}
      title={
        <TabTitleText>
          Configure
        </TabTitleText>
      }
    >
      <div
        className="ansible-configure-table"
      >
        <React.Fragment>
          <React.Fragment>
            <div
              className="titleWithTooltip"
            >
              <Title
                headingLevel="h3"
              >
                Credential
              </Title>
              <div
                className="GrayOutlinedQuestionCircleIcon"
              >
                <mockTooltip
                  content={
                    <div>
                      Credential
                    </div>
                  }
                  position="top"
                >
                  <OutlinedQuestionCircleIcon
                    color="#6a6e73"
                    noVerticalAlign={false}
                    size="sm"
                  />
                </mockTooltip>
              </div>
            </div>
            <div
              className="infoArea createCredential"
            >
              <Select
                aria-describedby=""
                aria-invalid={false}
                aria-label="Select Ansible credential"
                aria-labelledby=""
                chipGroupComponent={null}
                className=""
                clearSelectionsAriaLabel="Clear all"
                createText="Create"
                customBadgeText={null}
                customContent={null}
                direction="down"
                favorites={Array []}
                favoritesLabel="Favorites"
                hasInlineFilter={false}
                inlineFilterPlaceholderText={null}
                inputIdPrefix=""
                isCreatable={false}
                isDisabled={false}
                isGrouped={false}
                isInputValuePersisted={false}
                isOpen={true}
                isPlain={false}
                menuAppendTo="inline"
                noResultsFoundText="No results found"
                onClear={[Function]}
                onCreateOption={[Function]}
                onFilter={null}
                onSelect={[Function]}
                onToggle={[MockFunction]}
                onTypeaheadInputChanged={null}
                ouiaSafe={true}
                placeholderText="Select Ansible credential"
                removeSelectionAriaLabel="Remove"
                selections="grc-testing"
                toggleAriaLabel="Options menu"
                toggleIcon={null}
                toggleId={null}
                typeAheadAriaLabel=""
                validated="default"
                variant="single"
                width=""
              >
                <SelectOption
                  className=""
                  component="button"
                  description="https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-jbwbd.dev08.red-chesterfield.com"
                  index={0}
                  inputId=""
                  isChecked={false}
                  isDisabled={false}
                  isFavorite={null}
                  isLoad={false}
                  isLoading={false}
                  isNoResultsOption={false}
                  isPlaceholder="grc-testing-new"
                  isSelected={false}
                  keyHandler={[Function]}
                  onClick={[Function]}
                  sendRef={[Function]}
                  value="grc-testing-new"
                />
              </Select>
              <AcmLaunchLink
                links={
                  Array [
                    Object {
                      "href": "/multicloud/credentials",
                      "icon": <AcmIcon
                        icon="opennewtab"
                      />,
                      "id": "createCredentialLink",
                      "noIcon": false,
                      "text": <TruncateText
                        maxCharacters={60}
                        text="Add credentials"
                      />,
                    },
                  ]
                }
              />
            </div>
          </React.Fragment>
        </React.Fragment>
      </div>
    </Tab>
    <Tab
      eventKey={1}
      title={
        <TabTitleText>
          History
        </TabTitleText>
      }
    >
      <div
        className="ansible-history-table"
      >
        <AcmTable
          autoHidePagination={true}
          columns={
            Array [
              Object {
                "cell": "status",
                "cellTransforms": Array [
                  [Function],
                ],
                "header": "Status",
                "search": [Function],
                "sort": "status",
                "transforms": undefined,
              },
              Object {
                "cell": "started",
                "cellTransforms": undefined,
                "header": "Started",
                "search": undefined,
                "sort": "started",
                "transforms": Array [
                  [Function],
                ],
              },
              Object {
                "cell": "finished",
                "cellTransforms": undefined,
                "header": "Finished",
                "search": undefined,
                "sort": "finished",
                "transforms": Array [
                  [Function],
                ],
              },
              Object {
                "cell": "link",
                "cellTransforms": undefined,
                "header": "",
                "search": undefined,
                "sort": undefined,
                "transforms": undefined,
              },
            ]
          }
          gridBreakPoint=""
          initialSort={
            Object {
              "direction": "desc",
              "index": 1,
            }
          }
          items={Array []}
          keyFn={[Function]}
          plural="ansible jobs"
          showToolbar={false}
        />
      </div>
    </Tab>
  </Tabs>
</React.Fragment>
`;

exports[`render AnsiblePanel component render AnsiblePanel component2 1`] = `
<React.Fragment>
  <Tabs
    activeKey={1}
    className="ansible-switch"
    component="div"
    isBox={false}
    isFilled={true}
    isSecondary={false}
    isVertical={false}
    leftScrollAriaLabel="Scroll left"
    mountOnEnter={false}
    onSelect={[MockFunction]}
    ouiaSafe={true}
    rightScrollAriaLabel="Scroll right"
    unmountOnExit={false}
    variant="default"
  >
    <Tab
      eventKey={0}
      title={
        <TabTitleText>
          Configure
        </TabTitleText>
      }
    >
      <div
        className="ansible-configure-table"
      >
        <React.Fragment>
          <React.Fragment>
            <div
              className="titleWithTooltip"
            >
              <Title
                headingLevel="h3"
              >
                Credential
              </Title>
              <div
                className="GrayOutlinedQuestionCircleIcon"
              >
                <mockTooltip
                  content={
                    <div>
                      Credential
                    </div>
                  }
                  position="top"
                >
                  <OutlinedQuestionCircleIcon
                    color="#6a6e73"
                    noVerticalAlign={false}
                    size="sm"
                  />
                </mockTooltip>
              </div>
            </div>
            <div
              className="infoArea createCredential"
            >
              <Select
                aria-describedby=""
                aria-invalid={false}
                aria-label="Select Ansible credential"
                aria-labelledby=""
                chipGroupComponent={null}
                className=""
                clearSelectionsAriaLabel="Clear all"
                createText="Create"
                customBadgeText={null}
                customContent={null}
                direction="down"
                favorites={Array []}
                favoritesLabel="Favorites"
                hasInlineFilter={false}
                inlineFilterPlaceholderText={null}
                inputIdPrefix=""
                isCreatable={false}
                isDisabled={false}
                isGrouped={false}
                isInputValuePersisted={false}
                isOpen={false}
                isPlain={false}
                menuAppendTo="inline"
                noResultsFoundText="No results found"
                onClear={[Function]}
                onCreateOption={[Function]}
                onFilter={null}
                onSelect={[Function]}
                onToggle={[MockFunction]}
                onTypeaheadInputChanged={null}
                ouiaSafe={true}
                placeholderText="Select Ansible credential"
                removeSelectionAriaLabel="Remove"
                selections="grc-testing"
                toggleAriaLabel="Options menu"
                toggleIcon={null}
                toggleId={null}
                typeAheadAriaLabel=""
                validated="default"
                variant="single"
                width=""
              >
                <SelectOption
                  className=""
                  component="button"
                  description="https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-jbwbd.dev08.red-chesterfield.com"
                  index={0}
                  inputId=""
                  isChecked={false}
                  isDisabled={false}
                  isFavorite={null}
                  isLoad={false}
                  isLoading={false}
                  isNoResultsOption={false}
                  isPlaceholder="grc-testing-new"
                  isSelected={false}
                  keyHandler={[Function]}
                  onClick={[Function]}
                  sendRef={[Function]}
                  value="grc-testing-new"
                />
              </Select>
              <AcmLaunchLink
                links={
                  Array [
                    Object {
                      "href": "/multicloud/credentials",
                      "icon": <AcmIcon
                        icon="opennewtab"
                      />,
                      "id": "createCredentialLink",
                      "noIcon": false,
                      "text": <TruncateText
                        maxCharacters={60}
                        text="Add credentials"
                      />,
                    },
                  ]
                }
              />
            </div>
          </React.Fragment>
        </React.Fragment>
      </div>
    </Tab>
    <Tab
      eventKey={1}
      title={
        <TabTitleText>
          History
        </TabTitleText>
      }
    >
      <div
        className="ansible-history-table"
      >
        <AcmTable
          autoHidePagination={true}
          columns={
            Array [
              Object {
                "cell": "status",
                "cellTransforms": Array [
                  [Function],
                ],
                "header": "Status",
                "search": [Function],
                "sort": "status",
                "transforms": undefined,
              },
              Object {
                "cell": "started",
                "cellTransforms": undefined,
                "header": "Started",
                "search": undefined,
                "sort": "started",
                "transforms": Array [
                  [Function],
                ],
              },
              Object {
                "cell": "finished",
                "cellTransforms": undefined,
                "header": "Finished",
                "search": undefined,
                "sort": "finished",
                "transforms": Array [
                  [Function],
                ],
              },
              Object {
                "cell": "link",
                "cellTransforms": undefined,
                "header": "",
                "search": undefined,
                "sort": undefined,
                "transforms": undefined,
              },
            ]
          }
          gridBreakPoint=""
          initialSort={
            Object {
              "direction": "desc",
              "index": 1,
            }
          }
          items={Array []}
          keyFn={[Function]}
          plural="ansible jobs"
          showToolbar={false}
        />
      </div>
    </Tab>
  </Tabs>
</React.Fragment>
`;

exports[`render AnsiblePanel component render AnsiblePanel component3 1`] = `
<React.Fragment>
  <Tabs
    activeKey={0}
    className="ansible-switch"
    component="div"
    isBox={false}
    isFilled={true}
    isSecondary={false}
    isVertical={false}
    leftScrollAriaLabel="Scroll left"
    mountOnEnter={false}
    onSelect={[MockFunction]}
    ouiaSafe={true}
    rightScrollAriaLabel="Scroll right"
    unmountOnExit={false}
    variant="default"
  >
    <Tab
      eventKey={0}
      title={
        <TabTitleText>
          Configure
        </TabTitleText>
      }
    >
      <div
        className="ansible-configure-table"
      >
        <React.Fragment>
          <React.Fragment>
            <div
              className="titleWithTooltip"
            >
              <Title
                headingLevel="h3"
              >
                Credential
              </Title>
              <div
                className="GrayOutlinedQuestionCircleIcon"
              >
                <mockTooltip
                  content={
                    <div>
                      Credential
                    </div>
                  }
                  position="top"
                >
                  <OutlinedQuestionCircleIcon
                    color="#6a6e73"
                    noVerticalAlign={false}
                    size="sm"
                  />
                </mockTooltip>
              </div>
            </div>
            <div
              className="infoArea createCredential"
            >
              <Select
                aria-describedby=""
                aria-invalid={false}
                aria-label="Select Ansible credential"
                aria-labelledby=""
                chipGroupComponent={null}
                className=""
                clearSelectionsAriaLabel="Clear all"
                createText="Create"
                customBadgeText={null}
                customContent={null}
                direction="down"
                favorites={Array []}
                favoritesLabel="Favorites"
                hasInlineFilter={false}
                inlineFilterPlaceholderText={null}
                inputIdPrefix=""
                isCreatable={false}
                isDisabled={false}
                isGrouped={false}
                isInputValuePersisted={false}
                isOpen={true}
                isPlain={false}
                menuAppendTo="inline"
                noResultsFoundText="No results found"
                onClear={[Function]}
                onCreateOption={[Function]}
                onFilter={null}
                onSelect={[Function]}
                onToggle={[MockFunction]}
                onTypeaheadInputChanged={null}
                ouiaSafe={true}
                placeholderText="Select Ansible credential"
                removeSelectionAriaLabel="Remove"
                selections=""
                toggleAriaLabel="Options menu"
                toggleIcon={null}
                toggleId={null}
                typeAheadAriaLabel=""
                validated="default"
                variant="single"
                width=""
              >
                <SelectOption
                  className=""
                  component="button"
                  description="https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-jbwbd.dev08.red-chesterfield.com"
                  index={0}
                  inputId=""
                  isChecked={false}
                  isDisabled={false}
                  isFavorite={null}
                  isLoad={false}
                  isLoading={false}
                  isNoResultsOption={false}
                  isPlaceholder="grc-testing-new"
                  isSelected={false}
                  keyHandler={[Function]}
                  onClick={[Function]}
                  sendRef={[Function]}
                  value="grc-testing-new"
                />
              </Select>
              <AcmLaunchLink
                links={
                  Array [
                    Object {
                      "href": "/multicloud/credentials",
                      "icon": <AcmIcon
                        icon="opennewtab"
                      />,
                      "id": "createCredentialLink",
                      "noIcon": false,
                      "text": <TruncateText
                        maxCharacters={60}
                        text="Add credentials"
                      />,
                    },
                  ]
                }
              />
            </div>
            
          </React.Fragment>
        </React.Fragment>
      </div>
    </Tab>
    <Tab
      eventKey={1}
      title={
        <TabTitleText>
          History
        </TabTitleText>
      }
    >
      <div
        className="ansible-history-table"
      >
        <AcmTable
          autoHidePagination={true}
          columns={
            Array [
              Object {
                "cell": "status",
                "cellTransforms": Array [
                  [Function],
                ],
                "header": "Status",
                "search": [Function],
                "sort": "status",
                "transforms": undefined,
              },
              Object {
                "cell": "started",
                "cellTransforms": undefined,
                "header": "Started",
                "search": undefined,
                "sort": "started",
                "transforms": Array [
                  [Function],
                ],
              },
              Object {
                "cell": "finished",
                "cellTransforms": undefined,
                "header": "Finished",
                "search": undefined,
                "sort": "finished",
                "transforms": Array [
                  [Function],
                ],
              },
              Object {
                "cell": "link",
                "cellTransforms": undefined,
                "header": "",
                "search": undefined,
                "sort": undefined,
                "transforms": undefined,
              },
            ]
          }
          gridBreakPoint=""
          initialSort={
            Object {
              "direction": "desc",
              "index": 1,
            }
          }
          items={Array []}
          keyFn={[Function]}
          plural="ansible jobs"
          showToolbar={false}
        />
      </div>
    </Tab>
  </Tabs>
</React.Fragment>
`;

exports[`render AnsiblePanel component render empty AnsiblePanel component4 1`] = `
<React.Fragment>
  <Tabs
    activeKey={0}
    className="ansible-switch"
    component="div"
    isBox={false}
    isFilled={true}
    isSecondary={false}
    isVertical={false}
    leftScrollAriaLabel="Scroll left"
    mountOnEnter={false}
    onSelect={[MockFunction]}
    ouiaSafe={true}
    rightScrollAriaLabel="Scroll right"
    unmountOnExit={false}
    variant="default"
  >
    <Tab
      eventKey={0}
      title={
        <TabTitleText>
          Configure
        </TabTitleText>
      }
    >
      <div
        className="ansible-configure-table"
      >
        <React.Fragment>
          <div
            className="infoArea createCredential noExistingCredential"
          >
            <Text>
              Ansible credential is required to create an Ansible job. Create your credential by clicking the following link:
              <AcmLaunchLink
                links={
                  Array [
                    Object {
                      "href": "/multicloud/credentials",
                      "icon": <AcmIcon
                        icon="opennewtab"
                      />,
                      "id": "createCredentialLink",
                      "noIcon": false,
                      "text": <TruncateText
                        maxCharacters={60}
                        text="Add credentials"
                      />,
                    },
                  ]
                }
              />
            </Text>
          </div>
        </React.Fragment>
      </div>
    </Tab>
    <Tab
      eventKey={1}
      title={
        <TabTitleText>
          History
        </TabTitleText>
      }
    >
      <div
        className="ansible-history-table"
      >
        <AcmTable
          autoHidePagination={true}
          columns={
            Array [
              Object {
                "cell": "status",
                "cellTransforms": Array [
                  [Function],
                ],
                "header": "Status",
                "search": [Function],
                "sort": "status",
                "transforms": undefined,
              },
              Object {
                "cell": "started",
                "cellTransforms": undefined,
                "header": "Started",
                "search": undefined,
                "sort": "started",
                "transforms": Array [
                  [Function],
                ],
              },
              Object {
                "cell": "finished",
                "cellTransforms": undefined,
                "header": "Finished",
                "search": undefined,
                "sort": "finished",
                "transforms": Array [
                  [Function],
                ],
              },
              Object {
                "cell": "link",
                "cellTransforms": undefined,
                "header": "",
                "search": undefined,
                "sort": undefined,
                "transforms": undefined,
              },
            ]
          }
          gridBreakPoint=""
          initialSort={
            Object {
              "direction": "desc",
              "index": 1,
            }
          }
          items={Array []}
          keyFn={[Function]}
          plural="ansible jobs"
          showToolbar={false}
        />
      </div>
    </Tab>
  </Tabs>
</React.Fragment>
`;

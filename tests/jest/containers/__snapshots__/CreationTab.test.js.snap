// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreationTab container renders as expected 1`] = `
CreationTab {
  "addPBs": [Function],
  "addPRs": [Function],
  "context": Object {},
  "formatUpdateError": [Function],
  "handleCancel": [Function],
  "handleCreate": [Function],
  "handleCreateAndUpdate": [Function],
  "props": Object {
    "match": Object {
      "isExact": true,
      "params": Object {
        "name": "policy-certificatepolicy",
        "namespace": "default",
      },
      "path": "/multicloud/policies/all/:namespace/:name",
      "url": "/multicloud/policies/all/default/policy-certificatepolicy",
    },
    "mutateStatus": "DONE",
    "secondaryHeaderProps": Object {
      "title": "testing1",
    },
    "updateSecondaryHeader": [MockFunction],
  },
  "refs": Object {},
  "setState": [Function],
  "state": Object {
    "updateRequested": false,
  },
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_didScheduleRenderPhaseUpdate": false,
      "_dispatcher": Object {
        "readContext": [Function],
        "useCallback": [Function],
        "useContext": [Function],
        "useDebugValue": [Function],
        "useDeferredValue": [Function],
        "useEffect": [Function],
        "useImperativeHandle": [Function],
        "useLayoutEffect": [Function],
        "useMemo": [Function],
        "useReducer": [Function],
        "useRef": [Function],
        "useResponder": [Function],
        "useState": [Function],
        "useTransition": [Function],
      },
      "_element": <CreationTab
        match={
          Object {
            "isExact": true,
            "params": Object {
              "name": "policy-certificatepolicy",
              "namespace": "default",
            },
            "path": "/multicloud/policies/all/:namespace/:name",
            "url": "/multicloud/policies/all/default/policy-certificatepolicy",
          }
        }
        mutateStatus="DONE"
        secondaryHeaderProps={
          Object {
            "title": "testing1",
          }
        }
        updateSecondaryHeader={[MockFunction]}
      />,
      "_firstWorkInProgressHook": null,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_isReRender": false,
      "_newState": null,
      "_numberOfReRenders": 0,
      "_renderPhaseUpdates": null,
      "_rendered": <Redirect
        to="undefined/all"
      />,
      "_rendering": false,
      "_updater": [Circular],
      "_workInProgressHook": null,
    },
  },
}
`;

exports[`CreationTab container renders as expected 2`] = `
CreationTab {
  "addPBs": [Function],
  "addPRs": [Function],
  "context": Object {},
  "formatUpdateError": [Function],
  "handleCancel": [Function],
  "handleCreate": [Function],
  "handleCreateAndUpdate": [Function],
  "props": Object {
    "handleCreateResources": [MockFunction],
    "match": Object {
      "isExact": true,
      "params": Object {
        "name": "policy-certificatepolicy",
        "namespace": "default",
      },
      "path": "/multicloud/policies/all/:namespace/:name",
      "url": "/multicloud/policies/all/default/policy-certificatepolicy",
    },
    "secondaryHeaderProps": Object {
      "title": "testing2",
    },
  },
  "refs": Object {},
  "setState": [Function],
  "state": Object {
    "updateRequested": false,
  },
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_didScheduleRenderPhaseUpdate": false,
      "_dispatcher": Object {
        "readContext": [Function],
        "useCallback": [Function],
        "useContext": [Function],
        "useDebugValue": [Function],
        "useDeferredValue": [Function],
        "useEffect": [Function],
        "useImperativeHandle": [Function],
        "useLayoutEffect": [Function],
        "useMemo": [Function],
        "useReducer": [Function],
        "useRef": [Function],
        "useResponder": [Function],
        "useState": [Function],
        "useTransition": [Function],
      },
      "_element": <CreationTab
        handleCreateResources={[MockFunction]}
        match={
          Object {
            "isExact": true,
            "params": Object {
              "name": "policy-certificatepolicy",
              "namespace": "default",
            },
            "path": "/multicloud/policies/all/:namespace/:name",
            "url": "/multicloud/policies/all/default/policy-certificatepolicy",
          }
        }
        secondaryHeaderProps={
          Object {
            "title": "testing2",
          }
        }
      />,
      "_firstWorkInProgressHook": null,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_isReRender": false,
      "_newState": null,
      "_numberOfReRenders": 0,
      "_renderPhaseUpdates": null,
      "_rendered": <Query
        query={
          Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "EditDiscoveries",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "discoveries",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "clusterLabels",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "policyNames",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "annotations",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "standards",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "categories",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "controls",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "namespaces",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "policiesByNamespace",
                            },
                            "selectionSet": undefined,
                          },
                        ],
                      },
                    },
                    Object {
                      "alias": Object {
                        "kind": "Name",
                        "value": "policyDiscoveries",
                      },
                      "arguments": Array [
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "name",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "name",
                            },
                          },
                        },
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "namespace",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "namespace",
                            },
                          },
                        },
                      ],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "compliances",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": Object {
                              "kind": "Name",
                              "value": "policy",
                            },
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "raw",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "placementPolicies",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "raw",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "placementBindings",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "raw",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [
                  Object {
                    "defaultValue": undefined,
                    "directives": Array [],
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NonNullType",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "String",
                        },
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "name",
                      },
                    },
                  },
                  Object {
                    "defaultValue": undefined,
                    "directives": Array [],
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NonNullType",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "String",
                        },
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "namespace",
                      },
                    },
                  },
                ],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 442,
              "start": 0,
            },
          }
        }
        variables={
          Object {
            "name": "policy-certificatepolicy",
            "namespace": "default",
          }
        }
      >
        [Function]
      </Query>,
      "_rendering": false,
      "_updater": [Circular],
      "_workInProgressHook": null,
    },
  },
}
`;
